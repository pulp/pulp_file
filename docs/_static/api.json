{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/file/files/": {"get": {"operationId": "content_file_files_list", "summary": "List file contents", "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.", "parameters": [{"name": "relative_path", "in": "query", "description": "Filter results where relative_path matches value", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileContent"}}}}}}, "tags": ["content: files"]}, "post": {"operationId": "content_file_files_create", "summary": "Create a file content", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: files"]}, "parameters": []}, "{file_content_href}": {"get": {"operationId": "content_file_files_read", "summary": "Inspect a file content", "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileContent"}}}, "tags": ["content: files"]}, "parameters": [{"name": "file_content_href", "in": "path", "description": "URI of File Content. e.g.: /pulp/api/v3/content/file/files/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/file/file/": {"get": {"operationId": "distributions_file_file_list", "summary": "List file distributions", "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileDistribution"}}}}}}, "tags": ["distributions: file"]}, "post": {"operationId": "distributions_file_file_create", "summary": "Create a file distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "parameters": []}, "{file_distribution_href}": {"get": {"operationId": "distributions_file_file_read", "summary": "Inspect a file distribution", "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileDistribution"}}}, "tags": ["distributions: file"]}, "put": {"operationId": "distributions_file_file_update", "summary": "Update a file distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "patch": {"operationId": "distributions_file_file_partial_update", "summary": "Partially update a file distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "delete": {"operationId": "distributions_file_file_delete", "summary": "Delete a file distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "parameters": [{"name": "file_distribution_href", "in": "path", "description": "URI of File Distribution. e.g.: /pulp/api/v3/distributions/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/file_exporters/file/file/": {"get": {"operationId": "file_exporters_file_file_list", "summary": "List file file system exporters", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}}}}, "tags": ["file_exporters: file"]}, "post": {"operationId": "file_exporters_file_file_create", "summary": "Create a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "parameters": []}, "{file_file_system_exporter_href}": {"get": {"operationId": "file_exporters_file_file_read", "summary": "Inspect a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "put": {"operationId": "file_exporters_file_file_update", "summary": "Update a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "patch": {"operationId": "file_exporters_file_file_partial_update", "summary": "Partially update a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "delete": {"operationId": "file_exporters_file_file_delete", "summary": "Delete a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["file_exporters: file"]}, "parameters": [{"name": "file_file_system_exporter_href", "in": "path", "description": "URI of File File System Exporter. e.g.: /pulp/api/v3/file_exporters/file/file/1/", "required": true, "type": "string"}]}, "{file_file_system_exporter_href}export/": {"post": {"operationId": "file_exporters_file_file_export", "description": "Trigger an asynchronous task to export a file publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PublicationExport"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["file_exporters: file"]}, "parameters": [{"name": "file_file_system_exporter_href", "in": "path", "description": "URI of File File System Exporter. e.g.: /pulp/api/v3/file_exporters/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/publications/file/file/": {"get": {"operationId": "publications_file_file_list", "summary": "List file publications", "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FilePublication"}}}}}}, "tags": ["publications: file"]}, "post": {"operationId": "publications_file_file_create", "summary": "Create a file publication", "description": "Trigger an asynchronous task to publish file content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FilePublication"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publications: file"]}, "parameters": []}, "{file_publication_href}": {"get": {"operationId": "publications_file_file_read", "summary": "Inspect a file publication", "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FilePublication"}}}, "tags": ["publications: file"]}, "delete": {"operationId": "publications_file_file_delete", "summary": "Delete a file publication", "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications: file"]}, "parameters": [{"name": "file_publication_href", "in": "path", "description": "URI of File Publication. e.g.: /pulp/api/v3/publications/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/file/file/": {"get": {"operationId": "remotes_file_file_list", "summary": "List file remotes", "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileRemote"}}}}}}, "tags": ["remotes: file"]}, "post": {"operationId": "remotes_file_file_create", "summary": "Create a file remote", "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileRemote"}}}, "tags": ["remotes: file"]}, "parameters": []}, "{file_remote_href}": {"get": {"operationId": "remotes_file_file_read", "summary": "Inspect a file remote", "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRemote"}}}, "tags": ["remotes: file"]}, "put": {"operationId": "remotes_file_file_update", "summary": "Update a file remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]}, "patch": {"operationId": "remotes_file_file_partial_update", "summary": "Partially update a file remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]}, "delete": {"operationId": "remotes_file_file_delete", "summary": "Delete a file remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]}, "parameters": [{"name": "file_remote_href", "in": "path", "description": "URI of File Remote. e.g.: /pulp/api/v3/remotes/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/file/file/": {"get": {"operationId": "repositories_file_file_list", "summary": "List file repositorys", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileRepository"}}}}}}, "tags": ["repositories: file"]}, "post": {"operationId": "repositories_file_file_create", "summary": "Create a file repository", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepository"}}}, "tags": ["repositories: file"]}, "parameters": []}, "{file_repository_href}": {"get": {"operationId": "repositories_file_file_read", "summary": "Inspect a file repository", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepository"}}}, "tags": ["repositories: file"]}, "put": {"operationId": "repositories_file_file_update", "summary": "Update a file repository", "description": "Trigger an asynchronous task to update a repository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "patch": {"operationId": "repositories_file_file_partial_update", "summary": "Partially update a file repository", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepository"}}}, "tags": ["repositories: file"]}, "delete": {"operationId": "repositories_file_file_delete", "summary": "Delete a file repository", "description": "Trigger an asynchronous task to delete a repository.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_href}modify/": {"post": {"operationId": "repositories_file_file_modify", "description": "Trigger an asynchronous task to create a new repository version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_href}sync/": {"post": {"operationId": "repositories_file_file_sync", "description": "Trigger an asynchronous task to sync file content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_href}versions/": {"get": {"operationId": "repositories_file_file_versions_list", "summary": "List repository versions", "description": "\nFileRepositoryVersion represents a single file repository version.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "number", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query", "description": "Filter results where number is less than value", "required": false, "type": "number"}, {"name": "number__lte", "in": "query", "description": "Filter results where number is less than or equal to value", "required": false, "type": "number"}, {"name": "number__gt", "in": "query", "description": "Filter results where number is greater than value", "required": false, "type": "number"}, {"name": "number__gte", "in": "query", "description": "Filter results where number is greater than or equal to value", "required": false, "type": "number"}, {"name": "number__range", "in": "query", "description": "Filter results where number is between two comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "content", "in": "query", "description": "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RepositoryVersion"}}}}}}, "tags": ["repositories: file versions"]}, "parameters": [{"name": "file_file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_version_href}": {"get": {"operationId": "repositories_file_file_versions_read", "summary": "Inspect a repository version", "description": "\nFileRepositoryVersion represents a single file repository version.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersion"}}}, "tags": ["repositories: file versions"]}, "delete": {"operationId": "repositories_file_file_versions_delete", "summary": "Delete a repository version", "description": "Trigger an asynchronous task to delete a repositroy version.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file versions"]}, "parameters": [{"name": "file_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/file/file/1/versions/1/", "required": true, "type": "string"}]}}, "definitions": {"file.FileContent": {"required": ["relative_path"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "md5": {"title": "Md5", "description": "The MD5 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "file.FileDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "minLength": 1}, "publication": {"title": "Publication", "description": "Publication to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "file.FileFileSystemExporter": {"required": ["path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "path": {"title": "Path", "description": "File system location to export to.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Unique name of the file system exporter.", "type": "string", "minLength": 1}}}, "PublicationExport": {"required": ["publication"], "type": "object", "properties": {"publication": {"title": "Publication", "description": "A URI of the publication to be exported.", "type": "string", "format": "uri"}}}, "file.FilePublication": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "publisher": {"title": "Publisher", "type": "string", "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository version", "type": "string", "format": "uri"}, "repository": {"title": "Repository", "description": "A URI of the repository to be published.", "type": "string", "format": "uri"}, "distributions": {"description": "This publication is currently hosted as defined by these distributions.", "type": "array", "items": {"description": "This publication is currently hosted as defined by these distributions.", "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}, "manifest": {"title": "Manifest", "description": "Filename to use for manifest file containing metadata for all the files.", "type": "string", "default": "PULP_MANIFEST", "minLength": 1}}}, "file.FileRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}}}, "file.FileRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "RepositoryAddRemoveContent": {"type": "object", "properties": {"add_content_units": {"description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed.", "type": "array", "items": {"type": "string"}}, "remove_content_units": {"description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added.", "type": "array", "items": {"type": "string"}}, "base_version": {"title": "Base version", "description": "A repository version whose content will be used as the initial set of content for the new repository version", "type": "string", "format": "uri"}}}, "RepositorySyncURL": {"required": ["remote"], "type": "object", "properties": {"remote": {"title": "Remote", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "ContentSummary": {"title": "Content summary", "description": "Various count summaries of the content in the version and the HREF to view them.", "required": ["added", "removed", "present"], "type": "object", "properties": {"added": {"title": "Added", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "removed": {"title": "Removed", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "present": {"title": "Present", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "RepositoryVersion": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "number": {"title": "Number", "type": "integer", "readOnly": true}, "base_version": {"title": "Base version", "description": "A repository version whose content was used as the initial set of content for this repository version", "type": "string", "format": "uri"}, "content_summary": {"$ref": "#/definitions/ContentSummary"}}}}, "tags": [{"name": "content: files", "x-displayName": "Content: Files"}, {"name": "distributions: file", "x-displayName": "Distributions: File"}, {"name": "file_exporters: file", "x-displayName": "File_Exporters: File"}, {"name": "publications: file", "x-displayName": "Publications: File"}, {"name": "remotes: file", "x-displayName": "Remotes: File"}, {"name": "repositories: file", "x-displayName": "Repositories: File"}, {"name": "repositories: file versions", "x-displayName": "Repositories: File Versions"}]}